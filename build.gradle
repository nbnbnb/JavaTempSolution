buildscript {

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        // maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBoot_version"
        classpath "io.spring.gradle:dependency-management-plugin:$springIO_version"

        // 打包 jar 包（SpringBoot 插件自带此功能）
        // https://github.com/johnrengelman/shadow/
        // http://imperceptiblethoughts.com/shadow/
        classpath "com.github.jengelman.gradle.plugins:shadow:+"

        classpath 'me.zhangjin.plugins:custom:+'

    }
}

subprojects {

    // 自定义插件
    // 此处指定的是类型名（gradle.build 内）
    apply plugin: BuildGradlePlugin
    // buildSrc 目录内自定义插件
    apply plugin: me.zhangjin.plugins.BuildSrcGroovyPlugin
    apply plugin: me.zhangjin.plugins.BuildSrcJavaPlugin

    // 通过本地仓库里面的 jar 包获取插件信息
    apply plugin: 'me.zhangjin.plugins'

    // 插件使用的都是 buildscript 中的依赖信息

    // 如果有 Java 代码，则需要此插件
    apply plugin: 'java'

    // 将 kotlin 编译为 JVM 平台代码
    apply plugin: 'kotlin'

    // JavaScript 平台
    // apply plugin: "kotlin2js"

    // 使用 maven 仓库
    apply plugin: 'maven'

    // Spring IO 管理
    apply plugin: 'io.spring.dependency-management'

    apply plugin: "kotlin-allopen"
    apply plugin: 'kotlin-spring'

    apply plugin: "kotlin-noarg"
    apply plugin: "kotlin-jpa"

    sourceCompatibility = java_version
    targetCompatibility = java_version

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    group = 'me.zhangjin.study'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        // maven { url "http://repo1.maven.org/maven2/" }
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = java_version
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = java_version
        }
    }

    dependencies {
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib'
        compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
        compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: "$kotlinx_version"
        compile('com.fasterxml.jackson.module:jackson-module-kotlin')
        compile group: 'org.springframework', name: 'spring-context'
        compile("commons-io:commons-io")

        implementation "io.reactivex.rxjava2:rxjava"

        testCompile group: 'org.springframework', name: 'spring-test'
        testCompile "org.jetbrains.kotlin:kotlin-test"
        testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit'
    }

    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:${springPlatform_version}"
        }
    }

    // jar 自定义插件构造
    custom {
        message = 'Custom Message'
    }

}

//region 自定义插件

class BuildGradlePlugin implements Plugin<Project> {
    @Override
    void apply(Project project) {
        project.task('hello01') {
            group = "custom"
            description = "build.gradle 自定义插件"
            doLast {
                println "Hello from the BuildGradlePlugin"
            }
        }
    }
}

// endregion


